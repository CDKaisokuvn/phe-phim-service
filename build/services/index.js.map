{"version":3,"sources":["../../src/services/index.js"],"names":["queue","kue","createQueue","redis","createClientFactory","Redis","crawlMovies","console","log","env","uri","i","job","create","page","save","err","id","process","done","data","list","Promise","all","map","movie","list_updated","filter","e","Movie"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,gBAAIC,WAAJ,CAAgB;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,mBAAmB,EAAE,+BAAY;AAC7B,aAAO,IAAIC,mBAAJ,EAAP;AACH;AAHE;AADmB,CAAhB,CAAd;;SAQsBC,W;;;;;yEAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACHC,YAAAA,OAAO,CAACC,GAAR,CAAYC,aAAIC,GAAhB;AADG;AAAA,mBAEG,wBAAUD,aAAIC,GAAd,CAFH;;AAAA;AAAA,mCAGMC,CAHN;AAIC,kBAAMC,GAAG,GAAGZ,KAAK,CACZa,MADO,CACA,kBADA,EACoB;AAAEC,gBAAAA,IAAI,EAAEH;AAAR,eADpB,EAEPI,IAFO,CAEF,UAAUC,GAAV,EAAe;AACjB,oBAAIA,GAAJ,EAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACTT,gBAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACK,EAAhB;AACH,eALO,CAAZ;AAJD;;AAGH,iBAASN,CAAT,GAAa,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAAA,oBAAtBA,CAAsB;AAO9B;;AAEDX,YAAAA,KAAK,CAACkB,OAAN,CAAc,kBAAd,EAAkC,EAAlC;AAAA,iFAAsC,kBAAgBN,GAAhB,EAAqBO,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACf,0BAAcP,GAAG,CAACQ,IAAJ,CAASN,IAAvB,CADe;;AAAA;AAC5BO,wBAAAA,IAD4B;AAAA;AAAA,+BAETC,OAAO,CAACC,GAAR,CACrBF,IAAI,CAACG,GAAL;AAAA,8FAAS,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQ,8BAAkBA,KAAlB,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAT;;AAAA;AAAA;AAAA;AAAA,4BADqB,CAFS;;AAAA;AAE9BC,wBAAAA,YAF8B;AAOlCA,wBAAAA,YAAY,GAAGA,YAAY,CAACC,MAAb,CAAoB,UAACC,CAAD;AAAA,iCAAO,CAAC,CAACA,CAAT;AAAA,yBAApB,CAAf;AAPkC;AAAA,+BAQ5BC,cAAMhB,MAAN,CAAaa,YAAb,CAR4B;;AAAA;AASlCP,wBAAAA,IAAI;;AAT8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtC;;AAAA;AAAA;AAAA;AAAA;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { getListMovies, updateMovieDetail, getMovieSrc } from \"./movie\";\r\nimport Redis from \"ioredis\";\r\nimport kue from \"kue\";\r\n\r\nimport { dbConnect, env } from \"../configs\";\r\nimport { Movie } from \"../models\";\r\n\r\nconst queue = kue.createQueue({\r\n    redis: {\r\n        createClientFactory: function () {\r\n            return new Redis();\r\n        },\r\n    },\r\n});\r\n\r\nexport async function crawlMovies() {\r\n    console.log(env.uri);\r\n    await dbConnect(env.uri);\r\n    for (let i = 1; i <= 270; i++) {\r\n        const job = queue\r\n            .create(\"crawl-list-movie\", { page: i })\r\n            .save(function (err) {\r\n                if (err) console.log(err);\r\n                console.log(job.id);\r\n            });\r\n    }\r\n\r\n    queue.process(\"crawl-list-movie\", 10, async function (job, done) {\r\n        const list = await getListMovies(job.data.page);\r\n        let list_updated = await Promise.all(\r\n            list.map(async (movie) => {\r\n                return await updateMovieDetail(movie);\r\n            }),\r\n        );\r\n        list_updated = list_updated.filter((e) => !!e);\r\n        await Movie.create(list_updated);\r\n        done();\r\n    });\r\n}\r\n\r\nexport { getMovieSrc };\r\n"],"file":"index.js"}