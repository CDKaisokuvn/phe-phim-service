{"version":3,"sources":["../src/index.js"],"names":["testDB","env","uri","dbClean","Movie","find","skip","limit","movies"],"mappings":";;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;SAEeA,M;;;;;gFAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACI;AADJ;AAAA,mBAE8B,wBAAUC,aAAIC,GAAd,CAF9B;;AAAA;AAAA;AAEYC,YAAAA,OAFZ,oBAEYA,OAFZ;AAAA;AAAA,mBAKyBC,cAAMC,IAAN,CAAW,EAAX,EAAeC,IAAf,CAAoB,CAApB,EAAuBC,KAAvB,CAA6B,EAA7B,CALzB;;AAAA;AAKUC,YAAAA,MALV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaAR,MAAM,G,CAEN","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport { main } from \"./server/index\";\r\nimport { crawlMovies, getMovieSrc } from \"./services\";\r\n\r\nimport { dbConnect, env, dbClean } from \"./configs\";\r\nimport regeneratorRuntime from \"regenerator-runtime\";\r\nimport { Movie } from \"./models\";\r\n\r\nasync function testDB() {\r\n    crawlMovies()\r\n    const { dbClean } = await dbConnect(env.uri);\r\n    // await dbClean();\r\n\r\n    const movies = await Movie.find({}).skip(1).limit(10);\r\n\r\n    //await getMovieSrc(movies[1]);\r\n\r\n    // const movie = await Movie.findById(movies[1]._id);\r\n    // console.log(movie);\r\n}\r\n\r\ntestDB();\r\n\r\n// main();\r\n"],"file":"index.js"}